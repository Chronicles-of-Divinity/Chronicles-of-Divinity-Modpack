name: Build Client Packs and Release

on:
  push:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Prepare build directory
        run: |
          mkdir build

      - name: Build Technic Pack
        run: |
          BUILD_DIR="build/technic"
          mkdir -p "$BUILD_DIR"
          cp -r config mods scripts resources "$BUILD_DIR/"
          shopt -s dotglob
          cp -r Clients/Technic/* "$BUILD_DIR/" 2>/dev/null || :
          shopt -u dotglob
          cd "$BUILD_DIR"
          zip -r ../../technic_pack.zip ./*
          cd ../..
        shell: bash

      - name: Build MultiMC Java 8 Pack
        run: |
          BUILD_DIR="build/multimc8"
          MINECRAFT_DIR="$BUILD_DIR/minecraft"
          mkdir -p "$BUILD_DIR" "$MINECRAFT_DIR"

          cp -r config mods scripts resources "$MINECRAFT_DIR/"

          shopt -s dotglob
          cp -r Clients/MultiMC_Java8/* "$BUILD_DIR/" 2>/dev/null || :
          shopt -u dotglob

          cd "$BUILD_DIR"
          zip -r ../../multimc8_pack.zip ./*
          cd ../..
        shell: bash

      - name: Build MultiMC Java 17+ Pack
        run: |
          BUILD_DIR="build/multimc17"
          MINECRAFT_DIR="$BUILD_DIR/minecraft"
          LWJGL3IFY_JAR_SRC="Clients/MultiMC_Java17/lwjgl3ify-2.1.10.jar"
          LWJGL3IFY_JAR_DEST="$MINECRAFT_DIR/mods/"

          if [ ! -f "$LWJGL3IFY_JAR_SRC" ]; then
            echo "Chyba: Soubor $LWJGL3IFY_JAR_SRC nebyl nalezen na očekávaném místě."
            exit 1
          fi

          mkdir -p "$BUILD_DIR" "$MINECRAFT_DIR"

          cp -r config mods scripts resources "$MINECRAFT_DIR/"

          shopt -s dotglob
          cp -r Clients/MultiMC_Java17/* "$BUILD_DIR/" 2>/dev/null || :
          shopt -u dotglob
          find "$BUILD_DIR" -maxdepth 1 -name "*.zip" -delete

          mkdir -p "$LWJGL3IFY_JAR_DEST"
          cp "$LWJGL3IFY_JAR_SRC" "$LWJGL3IFY_JAR_DEST"

          cd "$BUILD_DIR"
          zip -r ../../multimc17_pack.zip ./*
          cd ../..
        shell: bash

      - name: Get short commit SHA
        id: get_short_sha
        run: echo "short_sha=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_short_sha.outputs.short_sha }}
          release_name: Build from commit ${{ steps.get_short_sha.outputs.short_sha }}
          body: |
            Automaticky generované Minecraft Client zipy.
            Commit: ${{ github.sha }}
          draft: false
          prerelease: true

      - name: Upload Technic Pack Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./technic_pack.zip
          asset_name: technic_pack.zip
          asset_content_type: application/zip

      - name: Upload MultiMC 8 Pack Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./multimc8_pack.zip
          asset_name: multimc8_pack.zip
          asset_content_type: application/zip

      - name: Upload MultiMC 17+ Pack Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./multimc17_pack.zip
          asset_name: multimc17_pack.zip
          asset_content_type: application/zip

      - name: Clean up build directory
        run: |
          rm -rf build
        if: always()